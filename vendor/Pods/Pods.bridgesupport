<?xml version='1.0'?>
<signatures version='1.0'>
<enum value='0' name='MBProgressHUDAnimationFade'/>
<enum value='1' name='MBProgressHUDAnimationZoom'/>
<enum value='2' name='MBProgressHUDAnimationZoomIn'/>
<enum value='1' name='MBProgressHUDAnimationZoomOut'/>
<enum value='3' name='MBProgressHUDModeAnnularDeterminate'/>
<enum value='4' name='MBProgressHUDModeCustomView'/>
<enum value='1' name='MBProgressHUDModeDeterminate'/>
<enum value='2' name='MBProgressHUDModeDeterminateHorizontalBar'/>
<enum value='0' name='MBProgressHUDModeIndeterminate'/>
<enum value='5' name='MBProgressHUDModeText'/>
<class name='MBBarProgressView'>
<method selector='lineColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progressColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='progressRemainingColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setLineColor:'>
<arg declared_type='UIColor*' type='@' index='0' name='lineColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' type='f' index='0' name='progress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressColor:'>
<arg declared_type='UIColor*' type='@' index='0' name='progressColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressRemainingColor:'>
<arg declared_type='UIColor*' type='@' index='0' name='progressRemainingColor'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MBProgressHUD'>
<method class_method='true' selector='HUDForView:'>
<arg declared_type='UIView*' type='@' index='0' name='view'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='allHUDsForView:'>
<arg declared_type='UIView*' type='@' index='0' name='view'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='animationType'>
<retval declared_type='MBProgressHUDAnimation' type='i'/>
</method>
<method selector='color'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='completionBlock'>
<retval declared_type='MBProgressHUDCompletionBlock' type='@?' function_pointer='true'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='customView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='detailsLabelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='detailsLabelText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dimBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='graceTime'>
<retval declared_type='float' type='f'/>
</method>
<method selector='hide:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hide:afterDelay:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<arg declared_type='NSTimeInterval' type='d' index='1' name='delay'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='hideAllHUDsForView:animated:'>
<arg declared_type='UIView*' type='@' index='0' name='view'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='hideHUDForView:animated:'>
<arg declared_type='UIView*' type='@' index='0' name='view'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithView:'>
<arg declared_type='UIView*' type='@' index='0' name='view'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithWindow:'>
<arg declared_type='UIWindow*' type='@' index='0' name='window'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isSquare'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='labelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='labelText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='margin'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minShowTime'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='mode'>
<retval declared_type='MBProgressHUDMode' type='i'/>
</method>
<method selector='opacity'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='removeFromSuperViewOnHide'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAnimationType:'>
<arg declared_type='MBProgressHUDAnimation' type='i' index='0' name='animationType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor*' type='@' index='0' name='color'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionBlock:'>
<arg declared_type='MBProgressHUDCompletionBlock' type='@?' function_pointer='true' index='0' name='completionBlock'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomView:'>
<arg declared_type='UIView*' type='@' index='0' name='customView'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' type='@' index='0' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetailsLabelFont:'>
<arg declared_type='UIFont*' type='@' index='0' name='detailsLabelFont'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetailsLabelText:'>
<arg declared_type='NSString*' type='@' index='0' name='detailsLabelText'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDimBackground:'>
<arg declared_type='BOOL' type='B' index='0' name='dimBackground'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGraceTime:'>
<arg declared_type='float' type='f' index='0' name='graceTime'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelFont:'>
<arg declared_type='UIFont*' type='@' index='0' name='labelFont'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelText:'>
<arg declared_type='NSString*' type='@' index='0' name='labelText'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMargin:'>
<arg declared_type='float' type='f' index='0' name='margin'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinShowTime:'>
<arg declared_type='float' type='f' index='0' name='minShowTime'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinSize:'>
<arg declared_type='CGSize' type='{CGSize=ff}' index='0' name='minSize'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg declared_type='MBProgressHUDMode' type='i' index='0' name='mode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='float' type='f' index='0' name='opacity'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' type='f' index='0' name='progress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemoveFromSuperViewOnHide:'>
<arg declared_type='BOOL' type='B' index='0' name='removeFromSuperViewOnHide'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSquare:'>
<arg declared_type='BOOL' type='B' index='0' name='square'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskInProgress:'>
<arg declared_type='BOOL' type='B' index='0' name='taskInProgress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXOffset:'>
<arg declared_type='float' type='f' index='0' name='xOffset'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYOffset:'>
<arg declared_type='float' type='f' index='0' name='yOffset'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='show:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<arg declared_type='dispatch_block_t' type='@?' function_pointer='true' index='1' name='block'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:completionBlock:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<arg declared_type='dispatch_block_t' type='@?' function_pointer='true' index='1' name='block'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='MBProgressHUDCompletionBlock' type='@?' function_pointer='true' index='2' name='completion'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:onQueue:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<arg declared_type='dispatch_block_t' type='@?' function_pointer='true' index='1' name='block'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='dispatch_queue_t' type='@' index='2' name='queue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:onQueue:completionBlock:'>
<arg declared_type='BOOL' type='B' index='0' name='animated'/>
<arg declared_type='dispatch_block_t' type='@?' function_pointer='true' index='1' name='block'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='dispatch_queue_t' type='@' index='2' name='queue'/>
<arg declared_type='MBProgressHUDCompletionBlock' type='@?' function_pointer='true' index='3' name='completion'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showHUDAddedTo:animated:'>
<arg declared_type='UIView*' type='@' index='0' name='view'/>
<arg declared_type='BOOL' type='B' index='1' name='animated'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='showWhileExecuting:onTarget:withObject:animated:'>
<arg declared_type='SEL' type=':' index='0' name='method'/>
<arg declared_type='id' type='@' index='1' name='target'/>
<arg declared_type='id' type='@' index='2' name='object'/>
<arg declared_type='BOOL' type='B' index='3' name='animated'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='taskInProgress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='xOffset'>
<retval declared_type='float' type='f'/>
</method>
<method selector='yOffset'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='MBRoundProgressView'>
<method selector='backgroundTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='isAnnular'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progressTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setAnnular:'>
<arg declared_type='BOOL' type='B' index='0' name='annular'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundTintColor:'>
<arg declared_type='UIColor*' type='@' index='0' name='backgroundTintColor'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' type='f' index='0' name='progress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressTintColor:'>
<arg declared_type='UIColor*' type='@' index='0' name='progressTintColor'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='hudWasHidden:'>
<arg declared_type='MBProgressHUD*' type='@' index='0' name='hud'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='MBProgressHUDDelegate'>
<method type='v12@0:4@8' selector='hudWasHidden:'>
<arg declared_type='MBProgressHUD*' type='@' index='0' name='hud'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
